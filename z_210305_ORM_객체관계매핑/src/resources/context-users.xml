<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd">

	<!-- MyBatis를 사용하기 위한 빈, 클래스명,참고되어야 하는 빈, 클래스 등을 입력 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" /> <!-- Oracle이랑 연동하기 위한 계정아이디 등을 적어놓은 properties를 연결 -->
		<property name="configLocation" value="classpath:/resources/sqlmap-user.xml" />	<!-- VO클래스 연결 -->
		<property name="mapperLocations" >	<!-- DB Query문을 모아놓은 xml파일을 연결, users.xml파일이 List형식으로 저장되어 있어 list로 지정 -->
			<list>
				<value>classpath:/resources/users.xml</value>
			</list>
		</property>
	</bean>
	
	<!-- sqlSessionFactroy로 연결되어 있는 모든 것들을 다시 하나의 빈으로 생성 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory"/><!-- 위에서 만든 sqlSessionFactory빈을 생성자로 주입 -->
	</bean>
	
	<!-- aop.annot 패키지도 스캔하라고 추가함 -->
	<!-- base-package에 component-scan을 할 패키지 경로를 명시해주면 해당 경로를 포함한 모든 하위 경로에 적용되고, 애노테이션을 명시한 자바 파일들이 Bean으로 동록 되어 사용 가능해진다. -->
	<context:component-scan base-package="user,user.aop.annot"></context:component-scan>
	
	<!-- properties를 읽어오기 위한 경로 지정 -->
	<context:property-placeholder location="classpath:/resources/user.properties"/>
											<!-- class경로 :/제일 위의 패키지/읽어올 파일 이름.properties -->
	
	<!-- Oracle에 연결하기 위한 경로 및 불러올 객체명 지정 -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<property name="driverClass" value="${db.driverClass}" />
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
	</bean>
</beans>
